model <- lm(price ~ model + year + mileage + color + transmission, usedcars_data)
model
summary(model)
# Set the URL of the CSV file to download
url <- "https://raw.githubusercontent.com/Sunday-Okey/Machine-Learning-with-R-datasets/master/insurance.csv"
# Check if a folder named "data" exists in the current working directory
if (!file.exists("data")) {
# If it doesn't exist, create it
dir.create("data")
}
# Set the file path for the downloaded CSV file
file_path <- file.path("data", "insurance.csv")
# Download the CSV file from the specified URL and save it to the file path
download.file(url, file_path, method = "auto")
# Read the CSV file into R
insurance_data <- read.csv(file_path)
# View the first few rows of the data to confirm that it was loaded correctly
head(insurance_data)
model <- lm(charges ~ age + sex + bmi + children + smoker + region, insurance_data)
model
summary(model)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(corrplot)
pairs(estate)
# Read the CSV file into R
estate <- read.csv(file_path)
# View the first few rows of the data to confirm that it was loaded correctly
head(estate)
pairs(estate)
# check for null values
is.na(estate)
# check for null values
# count the number of null values
sum(is.na(estate))
# Set the URL of the CSV file to download
url <- "https://dcgerard.github.io/stat_415_615/data/estate.csv"
# Check if a folder named "data" exists in the current working directory
if (!file.exists("data")) {
# If it doesn't exist, create it
dir.create("data")
}
# Set the file path for the downloaded CSV file
file_path <- file.path("data", "estate.csv")
# Download the CSV file from the specified URL and save it to the file path
download.file(url, file_path, method = "auto")
# Read the CSV file into R
estate <- read.csv(file_path)
# View the first few rows of the data to confirm that it was loaded correctly
head(estate)
# check for null values
# count the number of null values
sum(is.na(estate))
# check for null values
# count the number of null values
colSum(is.na(estate))
# check for null values
# count the number of null values
sum(is.na(estate))
#Let's drop the id column columns
estate %>%
select(-id)
#Let's drop the id column columns
estate %>%
select(-id) -> estate
quant_variables <- estate %>%
select(price, area, bed, bath, garage,
year, quality ,style, lot)
pairs(quant_variables)
quant_variables <- estate %>%
select(price, area, bed, bath, garage,
year, quality ,style, lot)
quant_variables
quant_variables <- estate %>%
select(price, area, bed, bath, garage,
year,style, lot)
quant_variables
pairs(quant_variables)
# Lets visualize the correlation
corrplot(cor(quant_variables), method = 'number')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
survey <- read_csv("multipleChoiceResponses")
survey <- read_csv("multipleChoiceResponses.csv")
survey
unique(survey$Country)
survey <- read_csv("HRDataset_v14.csv")
survey
hr <- read_csv("HRDataset_v14.csv")
hr
unique(hr$RaceDesc)
unique(hr$CitizenDesc)
unique(hr$State)
unique(hr$Position)
hr %>%
ggplot(aes(x = Gender, y = Salary)) %>%
geom_boxplot()
hr %>%
ggplot(aes(x = Gender, y = Salary)) %>% +
geom_boxplot()
hr %>%
ggplot(aes(x = Sex, y = Salary)) %>% +
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(ggthemes)
hr %>%
ggplot(aes(x = Sex, y = Salary)) %>% +
geom_boxplot()
scale_fill_colorblind()
hr %>%
ggplot(aes(x = Sex, y = Salary)) %>% +
geom_boxplot()+
scale_fill_colorblind()
hr %>%
ggplot(aes(x = Sex, y = Salary)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")
scale_fill_colorblind()+
hr %>%
ggplot(aes(x = Sex, y = Salary, color=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary), color=Sex) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary), color=Sex) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary)) %>% +
geom_boxplot(color=Sex)+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary)) %>% +
geom_boxplot(color=Sex)+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Position, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = RaceDesc, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = RaceDesc, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = CitizenDesc, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw() +
facet_wrap(~CitizenDesc)
hr %>%
ggplot(aes(x = Sex, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw() +
facet_wrap(~RaceDesc)
hr %>%
ggplot(aes(x = Sex, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw() +
facet_wrap(~Department)
hr %>%
ggplot(aes(x = Sex)) %>% +
geom_bar()+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex)) %>% +
geom_bar(stat = "identity")+
scale_fill_colorblind()+
theme_bw() +
coord_flip()
hr %>%
ggplot(aes(x = Sex)) %>% +
geom_bar()+
scale_fill_colorblind()+
theme_bw() +
coord_flip()
hr %>%
ggplot(aes(x = RecruitmentSource)) %>% +
geom_bar()+
scale_fill_colorblind()+
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
ggplot(aes(x = RecruitmentSource)) +
geom_bar() +
stat_count(aes(label = ..count..), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
ggplot(aes(x = RecruitmentSource)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
ggplot(aes(x = RecruitmentSource, fill = RecruitmentSource)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
mutate(RecruitmentGroup = ifelse(RecruitmentSource %in% c("A", "B", "C"), "Group 1", "Group 2")) %>%
ggplot(aes(x = RecruitmentSource, fill = RecruitmentGroup)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_manual(values = c("#F8766D", "#7CAE00")) +
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
ggplot(aes(x = RecruitmentSource, fill = RecruitmentSource)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
ggplot(aes(x = RecruitmentSource, fill = RecruitmentSource)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
theme_bw() +
coord_flip()
hr <- read_csv("HRDataset_v14.csv")
hr
hr <- read_csv("HRDataset_v14.csv")
hr
library(ggplot2)
hr %>%
ggplot(aes(x = Position, fill = Position)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
ggplot(aes(x = MaritalDesc, fill = MaritalDesc)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
ggplot(aes(x = RaceDesc, fill = RaceDesc)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
mdy("7/5/2011")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(ggthemes)
library(lubridate)
mdy("7/5/2011")
year("7/5/2011")
month("7/5/2011")
day("7/5/2011")
hr %>%
mutate(DateofHiretrans = mdy(DateofHire))
hr %>%
mutate(DateofHiretrans = year(mdy(DateofHire)))
hr %>%
mutate(DateofHiretrans = year(mdy(DateofHire))) -> hr
library(ggplot2)
hr %>%
ggplot(aes(x = DateofHiretrans, fill = RaceDesc)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
ggplot(aes(x = DateofHiretrans)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
library(ggplot2)
hr %>%
ggplot(aes(x = EmpSatisfaction)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
hr %>%
ggplot(aes(x = Position, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw() +
facet_wrap(~Department)
hr %>%
ggplot(aes(x = Position, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw()
hr %>%
ggplot(aes(x = Sex, y = Salary, fill=Sex)) %>% +
geom_boxplot()+
stat_summary(fun = mean, geom = "point", shape = 20, size = 3, color = "red", fill = "red")+
scale_fill_colorblind()+
theme_bw() +
facet_wrap(~Department)
library(ggplot2)
ggplot(hr, aes(x = Position, y = Salary)) +
geom_violin() +
labs(x = "Position", y = "Salary") +
theme_bw()
hr %>%
mutate(DateofHiretrans = year(mdy(DateofHire))) -> hr
library(ggplot2)
ggplot(hr, aes(x = DateofHiretrans, y = Salary, color = Position)) +
geom_point() +
labs(x = "Years Since Graduation", y = "Salary", color = "Position") +
theme_bw()
library(ggplot2)
ggplot(hr, aes(x = Sex, y = Salary, color = Position)) +
geom_point() +
labs(x = "Years Since Graduation", y = "Salary", color = "Position") +
theme_bw()
library(ggplot2)
ggplot(hr, aes(x = Sex, y = Salary, color = Sex)) +
geom_point() +
labs(x = "Years Since Graduation", y = "Salary", color = "Position") +
theme_bw()
library(ggplot2)
hr %>%
ggplot(aes(x = EmpSatisfaction)) +
geom_bar() +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
ui <- fluidPage(
titlePanel("Putting things together"),
selectInput("var1", "Variable 1", choices = names(hr)),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(hr, aes(x = .data[[input$var1]])) +
geom_bar(color = "blue") +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip()
ggtitle("Mtcars Scatter Plot") +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Putting things together"),
selectInput("var1", "Variable 1", choices = names(hr)),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(hr, x = .data[[input$vars]])) +
ui <- fluidPage(
titlePanel("Putting things together"),
selectInput("var1", "Variable 1", choices = names(hr)),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(hr, x = .data[[input$vars]]) +
geom_bar(color = "blue") +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip() +
ggtitle("Mtcars Scatter Plot")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Putting things together"),
selectInput("vars", "HR Variables", choices = names(hr)),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(hr, x = .data[[input$vars]]) +
geom_bar(color = "blue") +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip() +
ggtitle("Mtcars Scatter Plot")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Putting things together"),
selectInput("vars", "HR Variables", choices = names(hr)),
plotOutput("plot"),
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(hr, x = .data[[input$vars]]) +
geom_bar(color = "blue") +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip() +
ggtitle("Mtcars Scatter Plot")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Putting things together"),
selectInput("vars", "HR Variables", choices = names(hr)),
plotOutput("plot"),
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(hr, aes(x = .data[[input$vars]])) +
geom_bar(color = "blue") +
stat_count(aes(label = after_stat(count)), geom = "text", vjust = -1) +
scale_fill_colorblind() +
theme_bw() +
coord_flip() +
ggtitle("Mtcars Scatter Plot")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Putting things together"),
selectInput("vars", "HR Variables", choices = names(hr)),
selectInput("var", "HR Variables", choices = unique(x)),
plotOutput("plot"),
)
